<h1> Admin Interface as of Tue Jan 22 16:31:12 MST 2019</h1>

This is a new feature not yet documented.  But it does seem to work.
The safest and best way to operate robopages is in a bash/scp only mode.
The site admin can then chown -R all files to a user who is not the apache process
and chmod -R 555 the fragments directory, chmod or chown  any LOGS directories, in order make them writable to the web server process..
Then it's secure.
<br/><br/>

However.  You might want to build a robopages site for a customer who doesn't do
bash perl python sed awk and scp.
<br/><br/>

In that case the RobopageAdmin.php is a useful alternative.
I'm not making any promises as to it's security as of today.
I do have one user using it, over a year now (2020) and still no hacks.
<br/><br/>

To make this work you have to sudo chown -R apache.apache the fragments directory.
The admin interface does a recursive chmod -R 755 to make it writable during the admin session.
If the user remembers to click the Logout button it chmods back to 555 when done.
<br/><br/>

Authentication is files based.  Look for RobopagePasswords.php in the plugins directory.
the RobopagePasswords.php file has the form usename:md5password:nimda, where nimda (admin backwards) 
is hard-coded.  
<br/><br/>
(test login as user: gitgit<br/>
 with password: gotgot)<br/>
gitgit:c7e0cc5ac1a953943a0b87422e5559e5:nimba<br/>
<br/><br/>

The upload mechanism is open source codes from Github.  I have not credited him yet. I will..
<br/><br/>

<h3> How to do it</h3>
go to the conf directory. copy RobopageAdminPlugins.ini onto plugins.ini<br.>
edit the plugins/RobopagePasswds.php file appropriately.<br.>
There is no "login" link in the codes. You have point a browser at the document root<br.>
and then manually add ?layout=nerd to see a login screen.<br.>
Click the logout button as you leave.<br.>
