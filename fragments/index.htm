(as it downloads from https://github.com/pittendrigh/robopages)
<h3> Mission Statement </h3>
Robopages is a small footprint mostly files-based CMS geared primarily toward unix-savvy developers. Database content generators are not prohited, but mostly avoided. If you are familiar with ssh, scp, bash and  with terminal emulators--Robopages is fast and bug snot slick.
<br/><br/>

<h3> Static Output </h3>
Robopages can now produce (optional) static output.  The details are in the documentation. 
To write out a whole site I traverse a development domain on localhost with <b> wget -r </b>. Robopages still produces dynamic output, which then gets manipulated by php DOM routines. A hierarchical file system containing static HTML is written out on localhost, where all hyperlinks and image src attributes adjusted so they work with relative paths. Scp -r then pushes that static output up to a real server.

<!--
<h3> Server Side Epub3 </h3>
The Epub3 display layout is now an at least temporarily abandoned project.
I was able to get it work reliably on output saved in epub3 format from a proprietary
epub editor named Jutoh, and from most but not all sigils. <br/><br/>
I have since lost interest in this project because content relies on a desktop editor like sigil.
It's here if you want to work on it.
I'm now more interested in the following roboBook layout, which is dynamic HTML 
that can be edited in place width scp, bash, sed, awk, imagemagick and vi 
<br/><br/> 
To try to get an Epub to work unzip an epub3 in the document root. Edit conf/dirlayouts.ini so it has a line:<br/>
path/path/MyEbook|book (should probably rename this roboEpub instead of book)<br/>
...away it sort of goes, in some cases but not all.
epub3 display is useful but new content has to be edited with something like sigil, on your desktop, and then uploaded to the server.
--> 
<h3> Galleries </h3>
Robopages supports image galleries where a main display image is surrounded by clickable thumbnails. All hyperlinks are automatically generated.  In order to add new images to the gallery you simply copy them into the gallery.  A clickable slideshow link is also automatially generated.

<h3> roboBook </h3>
roboBook is a layout option that uses directories populated with HTML fragment files to present chapters and pages in a familiar book-like fashion, complete with TOC (collapsable table of contents), NextPage, PrevPage and LastReadPage buttons, presented in a configuralble sequential order.
The Documentation section, for instance, uses a roboBook layout.

<h3>Layouts</h3>
Layouts are defined by editing an XML file (in layouts/*.xml) and by editing or adding CSS. Dynamic content, on a block element by block element basis, is generated from a plugin module in the plugins directory. Layhout XML files marry each individual block element to one or more plugin generators, that populate that particular element.

<br/><br/>

The simplest plugin module is file.php which sucks in the contents of an html fragment file.  Html fragments, images and downloadable files can be arranged in an organized system of nested file directories. 

<br/><br/>

<h3> Plugins </h3>
Robopages&apos; plugins operate on a per-block element level. The XML mentioned in the paragraph above defines the ID names of the major block elements of a page, their tree-like nesting structure and the plugin class that supplies their dynamic contents.
<br/><br/>

The following is robo.xml, the layout definition that results in the current page:
<br/><br/>

<div style="font-size: 1.3vw; border:2px solid black; background:#ffffff; margin: 1em; padding: 1em;">
    `$path="layouts/robo.xml"; echo @highlight_file($path);` 
</div>
